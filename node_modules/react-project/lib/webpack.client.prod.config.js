'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _webpack = require('webpack');

var _webpack2 = _interopRequireDefault(_webpack);

var _extractTextWebpackPlugin = require('extract-text-webpack-plugin');

var _extractTextWebpackPlugin2 = _interopRequireDefault(_extractTextWebpackPlugin);

var _webpackShared = require('./webpack.shared.config');

var SHARED = _interopRequireWildcard(_webpackShared);

var _webpackSharedClient = require('./webpack.shared.client.config');

var SHARED_CLIENT = _interopRequireWildcard(_webpackSharedClient);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var HASH8 = '[hash:8]';

exports.default = {

  devtool: 'sourcemap',

  entry: SHARED_CLIENT.ENTRY,

  output: {
    path: SHARED_CLIENT.BUILD_PATH,
    filename: '[name].' + HASH8 + '.js',
    publicPath: process.env.PUBLIC_PATH || '/'
  },

  module: {
    loaders: SHARED_CLIENT.LOADERS.concat([{ test: SHARED.JS_REGEX,
      loader: 'babel-loader'
    }, { test: SHARED.CSS_REGEX,
      loader: _extractTextWebpackPlugin2.default.extract('style-loader', 'css-loader?' + SHARED.CSS_LOADER_QUERY + '!postcss-loader'),
      name: 'css'
    }])
  },

  plugins: SHARED_CLIENT.PLUGINS.concat([new _extractTextWebpackPlugin2.default('styles.' + HASH8 + '.css'), new _webpack2.default.optimize.DedupePlugin(), new _webpack2.default.optimize.OccurrenceOrderPlugin(), new _webpack2.default.optimize.UglifyJsPlugin()])

};