{"version":3,"sources":["logo.svg","ArticleEditor.js","reportWebVitals.js","index.js"],"names":["ArticleEditor","useState","EditorState","createEmpty","editorState","setEditorState","className","onClick","RichUtils","toggleInlineStyle","onChange","handleKeyCommand","command","newState","placeholder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2JAAe,I,4BCIA,SAASA,IACpB,MAAsCC,oBAClC,kBAAMC,cAAYC,iBADtB,mBAAOC,EAAP,KAAoBC,EAApB,KAyBE,OACE,sBAAKC,UAAU,YAAf,UACI,wBAAQC,QAXU,WAClBF,EAAeG,YAAUC,kBAAkBL,EAAa,UAUxD,kBACA,wBAAQG,QATe,WACvBF,EAAeG,YAAUC,kBAAkBL,EAAa,YAQxD,uBACA,wBAAQG,QAPa,WACrBF,EAAeG,YAAUC,kBAAkBL,EAAa,eAMxD,uBACF,uDACA,cAAC,SAAD,CACEA,YAAaA,EACbM,SAAUL,EACVM,iBA9BmB,SAACC,EAASR,GAC/B,IAAMS,EAAWL,YAAUG,iBAAiBP,EAAaQ,GAEzD,OAAIC,GACAR,EAAeQ,GACR,WAGJ,eAuBLC,YAAY,aCxCxB,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.c69efc89.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useState} from 'react';\n// import ReactDOM from 'react-dom';\nimport { Editor, EditorState, RichUtils } from 'draft-js';\nimport 'draft-js/dist/Draft.css';\nexport default function ArticleEditor() {\n    const [editorState, setEditorState] = useState(\n        () => EditorState.createEmpty(),\n      )\n\n      const handleKeyCommand = (command, editorState) => {\n          const newState = RichUtils.handleKeyCommand(editorState, command);\n\n          if (newState) {\n              setEditorState(newState);\n              return 'handled';\n          }\n\n          return 'not-handled';\n      }\n      \n\n      const setToBoldToggle = () => {\n            setEditorState(RichUtils.toggleInlineStyle(editorState, 'BOLD'));\n         }\n      const setToItalicizeToggle = () => {\n            setEditorState(RichUtils.toggleInlineStyle(editorState, 'ITALIC'));\n        }\n    const setToUnderlineToggle = () => {\n            setEditorState(RichUtils.toggleInlineStyle(editorState, 'UNDERLINE'));\n        }\n      return (\n        <div className=\"container\">\n            <button onClick={setToBoldToggle}>Bold</button>\n            <button onClick={setToItalicizeToggle}>Italicize</button>\n            <button onClick={setToUnderlineToggle}>Underline</button>\n          <h2>Welcome to the editor</h2>\n          <Editor\n            editorState={editorState}\n            onChange={setEditorState}\n            handleKeyCommand={handleKeyCommand}\n            placeholder=\"hello\"\n            />\n        </div>\n      );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport Editor from './ArticleEditor';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Editor />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}